
<!doctype linuxdoc system>

<article>

<!-- Title Information -->

<title>COM de Perspectiva General del Treball en Xarxa a Linux
<author>Daniel Lopez Ridruejo, <tt/ridruejo@rawbyte.com/
<date>v0.32, 8 July 2000

<!-- Abstract -->
<abstract>
El propòsit d'aquest Document és el d'oferir una perspectiva general de
les capacitats de treball en xarxa del siSistema Operatiu Linux i
proporcionar referències a informació addicional i detalls
d'implementació.
</abstract>

<!-- Table of Contents -->
<toc>

<!-- Begin the document -->
<sect>Introducció
<p>

El propòsit d'aquest document és el de proporcionar una perspectva
general de les capacitat de treball en xarxa del sistema operatiu
Linu. Malgrat que un dels punts forts de Linux és que existeix
moltíssima informació per a quasi tots els seus components, la majoria
d'aquesta informació està enfocada en la impliementació. Els usuaris
nous de Linux, particularment aquells que venen d'un entorn Windows,
sovint no estàn assabentats de les possibilitats de treball en xarxa
de Linu. Aquest documnent pretén mostrar un plànol general de tals
possibilitats amb una breu descripció de cadascuna d'elles i
ennlaços <!--pointers--> per a informació addicional. La informació ha
estat reunida des de moltes fonts: HOWTOs, faqs, planes web de
projectes i la meua experiència personal. S'ofereix tot el
reconeixement als autors d'aquestes fonts. Sense ells i els seus
programes aquest document no hauria sigut possible o necessari.

<sect>Linux.
<p>
<sect1> Què és Linux?
<p>
L'autor principal de Linux és Linus Torvalds. Des de les seues
versions originals, ha sigut millorat per un incontables nombre de
persones . És un clon, escrit des de zero, del sistema operatiu
Unix. Un dels fets més interessants de Linux és que el seu
desenvolupament ocorre de manera simultània al voltant del món.
<p>
El copyright de Linux s'ha <!--copyrighted--> fet baix els termes de
la GNU General Public License (GPL). Això és una licència escrita per
la Free Software Foundation (FSF) què està dissenyada per a evitar que
la gent puga restingir la distribució de programari. Bàsicament, diu
que malgrat que es poden cobrar diners per una còpia, no es pot evitar
que la persona que reba la còpia la distribuïsca gratuïtament. També
significa que el codi font ha d'estar disponible. Açò és útil per a
programadors. Qualsevol pot modificar Linux i fins i tot distribuïr
les seues modificacions, sempre i quan mantinga el codi baix el mateix
copyright.

<sect1> Què fa que Linux siga diferent? <!--What makes Linux different?-->
<p>
Per què treballar en Linux? Linux és generalment més barat (o almenys
no més car) que altrs sistemes operatius i sovint és menys problemàtic
que mols altres sistemes comercials. Però allò que fa Linux diferent
no és el seu preu (després de tot, per què voldria algún un SO - fins
i tot un de grauït - si no és suficientment bo?) sinò les seues
capacitats fora de sèrie:
<p>
<itemize>
<item>Linux is a true 32-bit multitasking operating system, robust and capable enough to be used in organizations ranging from universities to large corporations. 
<item>It runs on hardware ranging from low-end 386 boxes to massive ultra-parallel machines in research centres. 
<item>Out-of-the-box versions are available for Intel, Sparc, and Alpha architectures, and experimental support exists for Power PC and embedded systems, among others such as SGI, Ultra Sparc, AP1000+, Strong ARM, and MIPS R3000/R4000.
<item>Finally, when it comes to networking, Linux is choice. Not only because networking is tightly integrated with the OS itself and a plethora of applications is freely available, but for the robustness under heavy loads that can only be achieved after years of debugging and testing in an Open Source project. 
</itemize>

<sect>Networking protocols
<p>

Linux supports many different networking protocols:

<sect1>TCP/IP
<p>

The Internet Protocol was originally developed two decades ago for the United States Department of Defense (DoD), mainly for the purpose of interconnecting different-brand computers. The TCP/IP suite of protocols allowed, through its layered structure, to insulate applications from networking hardware.
<p>
Although it is based on a layered model, it is focused more on delivering interconnectivity than on rigidly adhering to functional layers. This is one of the reasons why TCP/IP has become the de facto standard internetworking protocol as opposed to OSI.
<p>
TCP/IP networking has been present in Linux since its beginnings. It has been implemented from scratch. It is one of the most robust, fast and reliable implementations and is one of the key factors of the success of Linux.
<p>
Related HOWTO: <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO.html">

<sect1> TCP/IP version 6
<p>

IPv6, sometimes also referred to as IPng (IP Next Generation) is an upgrade to the IPv4 protocol in order to address many issues. These issues include: shortage of available IP addresses, lack of mechanisms to handle time-sensitive traffic, lack of network layer security, etc. 
<p>
The larger name space will be accompanied by an improved addressing scheme, which will have a great impact on routing performance.
A beta implementation exists for Linux, and a production version is expected for the 2.2.0 Linux kernel release.
<itemize>
<item>Linux IPv6 HOWTO:<htmlurl url="http://www.wcug.wwu.edu/ipv6/faq/" name="http://www.wcug.wwu.edu/ipv6/faq/" >
</itemize>

<sect1>IPX/SPX
<p>
IPX/SPX (Internet Packet Exchange/Sequenced Packet Exchange) is a proprietary protocol stack developed by Novell and based on the Xerox Network Systems (XNS) protocol. IPX/SPX became prominent during the early 1980s as an integral part of Novell, Inc.'s NetWare. NetWare became the de facto standard network operating system (NOS) of first generation LANs. Novell complemented its NOS with a business-oriented application suite and client-side connection utilities.
<p>
Linux has a very clean IPX/SPX implementation, allowing it to be configured as an:
<itemize>
<item> IPX router
<item> IPX bridge
<item> NCP client and/or NCP Server (for sharing files)
<item> Novell Print Client, Novell Print Server
</itemize>
And to:
<itemize>
<item> Enable PPP/IPX, allowing a Linux box to act as a PPP server/client 
<item> Perform IPX tunnelling through IP, allowing the connection of two IPX networks through an IP only link
</itemize>
<p>
Additionally, <url url="http://www.caldera.com" name="Caldera"> offers commercial support for Novell NetWare under Linux. Caldera provides a fully featured Novell NetWare client built on technology licensed from Novell Corporation. The client provides full client access to Novell 3.x and 4.x fileservers and includes features such as NetWare Directory Service (NDS) and RSA encryption.
<p>
<itemize>
<item>IPX HOWTO: <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/IPX-HOWTO.html"
name="http://metalab.unc.edu/mdw/HOWTO/IPX-HOWTO.html">
</itemize>

<sect1>AppleTalk Protocol Suite
<p>
Appletalk is the name of Apple's internetworking stack. It allows a peer-to-peer network model which provides basic functionality such as file and printer sharing. Each machine can simultaneously act as a client and a server, and the software and hardware necessary are included with every Apple computer.
<p>
Linux provides full Appletalk networking. Netatalk is a kernel-level implementation of the AppleTalk Protocol Suite, originally for BSD-derived systems. It includes support for routing AppleTalk, serving Unix and AFS filesystems over AFP (AppleShare), serving Unix printers and accessing AppleTalk printers over PAP.
<p>
See section 5.1 for more information.

<sect1> WAN Networking: X.25, Frame-relay, etc...
<p>
Several third parties provide T-1, T-3, X.25 and Frame Relay products for Linux. Generally special hardware is required for these types of connections. Vendors that provide the hardware also provide the drivers with protocol support.
<p>
<itemize>
<item>WAN resources for Linux: <htmlurl url="http://www.secretagent.com/networking/wan.html" name="http://www.secretagent.com/networking/wan.html">
</itemize>



<sect1>ISDN
<p>
The Linux kernel has built-in ISDN capabilies. Isdn4linux controls ISDN PC cards and can emulate a modem with the Hayes command set ("AT" commands). The possibilities range from simply using a terminal program to connections via HDLC (using included devices) to full connection to the Internet with PPP to audio applications.
<p>
<itemize>
<item>FAQ for isdn4linux: <htmlurl url="http://www.isdn4linux.de/faq/" name="http://ww.isdn4linux.de/faq/">
</itemize>


<sect1>PPP, SLIP, PLIP
<p>
The Linux kernel has built-in support for PPP (Point-to-Point-Protocol), SLIP (Serial Line IP) and PLIP (Parallel Line IP). PPP is the most popular way individual users access their ISPs (Internet Service Providers). PLIP allows the cheap connection of two machines. It uses a parallel port and a special cable, achieving speeds of 10kBps to 20kBps. 
<p>
<itemize>
<item><url name="Linux PPP HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/PPP-HOWTO.html">
<item><url name="PPP/SLIP emulator" url="http://metalab.unc.edu/mdw/HOWTO/mini/SLIP-PPP-Emulator.html">
<item>PLIP information can be found in <url name="The Network Administrator Guide" url="http://metalab.unc.edu/mdw/LDP/nag/nag.html">
</itemize>

<sect1>Amateur Radio
<p>
The Linux kernel has built-in support for amateur radio protocols.
<p>
Especially interesting is the AX.25 support. The AX.25 protocol offers both connected and connectionless modes of operation, and is used either by itself for point-point links, or to carry other protocols such as TCP/IP and NetRom.
<p>
It is similar to X.25 level 2 in structure, with some extensions to make it more useful in the amateur radio environment.
<itemize>
<item><url name="Amateur radio on Linux web site" url="http://radio.linux.org.au/">
</itemize>

<sect1>ATM
<p>
ATM support for Linux is currently in pre-alpha stage. There is an experimental release, which supports raw ATM connections (PVCs and SVCs), IP over ATM, LAN emulation...
<p>
<itemize>
<item>Linux <url name="ATM-Linux home page" url="http://lrcwww.epfl.ch/linux-atm/">
</itemize>

<sect>Networking hardware supported
<p>
Linux supports a great variety of networking hardware, including some obsolete equipment.
<p>
Some interesting documents: 
<itemize>
<item><url name="Hardware HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/Hardware-HOWTO.html">
<item><url url="http://metalab.unc.edu/mdw/HOWTO/Ethernet-HOWTO.html" name="Ethernet HOWTO">
</itemize>

<sect>File Sharing and Printing

<p>The primary purpose of many PC based Local Area Networks is to provide file and printer sharing services to the users. Linux as a corporate file and print server turns out to be a great solution.

<sect1>Apple environment

<p>As outlined in previous sections, Linux supports the Appletalk family of protocols. Linux netatalk allows Macintosh clients to see Linux Systems as another Macintosh on the network, share files and use printers connected to Linux servers.
<p>
Netatalk faq and HOWTO:
<itemize>
<item><htmlurl url="http://thehamptons.com/anders/netatalk/" name="http://thehamptons.com/anders/netatalk/">
<item><htmlurl url="http://www.umich.edu/~rsug/netatalk/" name="http://www.umich.edu/~rsug/netatalk/">
<item><htmlurl url="http://www.umich.edu/~rsug/netatalk/faq.html"
name="http://www.umich.edu/~rsug/netatalk/faq.html">
</itemize>

<sect1>Windows Environment
<p>
Samba is a suite of applications that allow most Unices (and in particular Linux) to integrate into a Microsoft network both as a client and a server. Acting as a server it allows Windows 95, Windows for Workgroups, DOS and Windows NT clients to access Linux files and printing services. It can completely replace Windows NT for file and printing services, including the automatic downloading of printer drivers to clients. Acting as a client allows the Linux workstation to mount locally exported windows file shares.
<p>
According to the SAMBA Meta-FAQ:<p>
<tscreen>
<verb>
"Many users report that compared to other SMB implementations Samba is more stable, 
faster, and compatible with more clients. Administrators of some large installations say 
that Samba is the only SMB server available which will scale to many tens of thousands 
of users without crashing"
</verb>
</tscreen>

<itemize>
<item><url name="Samba project home page" url="http://samba.anu.edu.au/samba/">
<item><url name="SMB HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/SMB-HOWTO.html">
<item><url name="Printing HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/Printing-HOWTO.html">
</itemize>

<sect1>Novell Environment
<p>
As stated in previous sections, Linux can be configured to act as an NCP client or server, thus allowing file and printing services over a Novell network for both Novell and Unix clients.

<itemize>
<item><url name="IPX HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/IPX-HOWTO.html">
</itemize>

<sect1>Unix Environment
<p>
The preferred way to share files in a Unix networking environment is through NFS. NFS stands for Network File Sharing and it is a protocol originally developed by Sun Microsystems. It is a way to share files between machines as if they were local. A client "mounts" a filesystem "exported" by an NFS server. The mounted filesystem will appear to the client machine as if it was part of the local filesystem. 
<p>
It is possible to mount the root filesystem at startup time, thus allowing diskless clients to boot up and access all files from a server. In other words, it is possible to have a fully functional computer without a hard disk.
<p>Coda is a network filesystem (like NFS) that supports disconnected
operation, persistant caching, among other goodies. 
It's included in 2.2.x kernels. Really handy for slow or unreliable networks
and laptops.  
<p>
NFS-related documents:
<itemize>
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/NFS-Root.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/NFS-Root.html" >
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Diskless-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/Diskless-HOWTO.html">
<item> <htmlurl
url="http://metalab.unc.edu/mdw/HOWTO/mini/NFS-Root-Client-mini-HOWTO/index.html"
name="http://metalab.unc.edu/mdw/HOWTO/mini/NFS-Root-Client-mini-HOWTO/index.html">
<item> <htmlurl url="http://www.redhat.com/support/docs/tips/NFS-Tips/NFS-Tips.html" name="http://www.redhat.com/support/docs/rhl/NFS-Tips/NFS-Tips.html">
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/NFS-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/NFS-HOWTO.html">
</itemize>
CODA can be found at: <htmlurl url="http://www.coda.cs.cmu.edu/"
name="http://www.coda.cs.cmu.edu/">
<sect>Internet/Intranet
<p>
Linux is a great platform to act as an Intranet / Internet server. The term Intranet refers to the application of Internet technologies inside an organisation mainly for the purpose of distributing and making available information inside the company. Internet and Intranet services offered by Linux include mail, news, WWW servers and many more that will be outlined in the next sections.

<sect1>Mail 
<p>
<sect2> Mail servers
<p>
Sendmail is the de facto standard mail server program (called an MTA, or Mail Transport Agent) for Unix platforms. It is robust, scalable, and properly configured and with the necessary hardware, can handle loads of thousands of users without blinking.  Alternative mail servers, such as smail and qmail, are also available.
<p>
<itemize>
<item><url name="Sendmail web site" url="http://www.sendmail.org/">
<item><url name="Smail faq" url="http://www.sbay.org/smail-faq.html">
<item><url name="Qmail web site" url="http://www.qmail.org">
</itemize>
Mail HOWTOs:
<itemize>
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Mail-User-HOWTO.html"
name="http://metalab.unc.edu/mdw/HOWTO/Mail-User-HOWTO.html">
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/Qmail+MH.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/Qmail+MH.html">
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/Sendmail+UUCP.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/Sendmail+UUCP.html">
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/Mail-Queue.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/Mail-Queue.html">
</itemize>

<sect2>Remote access to mail 
<p>In an organisation or ISP, users will likely access their mail remotely from their desktops. Several alternatives exist in Linux, including POP (Post Office Protocol) and IMAP (Internet Message Access Protocol) servers. The POP protocol is usually used to transfer messages from the server to the client. IMAP permits also manipulation of the messages in the server, remote creation and deletion of folders in the server, concurrent access to shared mail folders, etc. 
<p>
<itemize>
<item><url name="Brief comparison IMAP and POP" url="http://www.imap.org/imap.vs.pop.brief.html">
</itemize>
Mail related HOWTOs:
<itemize>
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Mail-User-HOWTO.html"
name="http://metalab.unc.edu/mdw/HOWTO/Mail-User-HOWTO.html">
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Cyrus-IMAP.html" name="http://metalab.unc.edu/mdw/HOWTO/Cyrus-IMAP.html">
</itemize>

<sect2>Mail User Agents
<p>
There are a number of MUA (Mail User Agents) in Linux, both graphical and text mode. The most widely used ones include: pine, elm, mutt and Netscape.
<p>
<itemize>
<item><url name="List of mail related software" url="http://www.linuxlinks.com/Software/Internet/Mail/">
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/TkRat.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/TkRat.html">
</itemize>

<sect2>Mailing list software
<p>
There are many MLM (Mail List Management) programs available for Unix in general and for Linux in particular. 
<p>
<itemize>
<item>A good comparison of existing MLMs may be found at:<htmlurl url="ftp://ftp.uu.net/usenet/news.answers/mail/list-admin/" name="ftp://ftp.uu.net/usenet/news.answers/mail/list-admin/">
<item> <url name="Listserv" url="http://www.lsoft.com/">
<item> <url name="Majordomo home page" url="http://www.greatcircle.com/majordomo/">
</itemize>

<sect2>Fetchmail
<p>
One userful mail-related utility is fetchmail. Fetchmail is a free, full-featured, robust, well-documented remote-mail retrieval and forwarding utility intended to be used over on-demand TCP/IP links (such as SLIP or PPP connections). It supports every remote-mail protocol now in use on the Internet. It can even support IPv6 and IPSEC.
<p>
Fetchmail retrieves mail from remote mail servers and forwards it via SMTP, so it can then be be read by normal mail user agents such as mutt, elm or BSD Mail. It allows all the system MTA's filtering, forwarding, and aliasing facilities to work just as they would on normal mail.
<p>
Fetchmail can be used as a POP/IMAP-to-SMTP gateway for an entire DNS domain, collecting mail from a single drop box on an ISP and SMTP-forwarding it based on header addresses.
<p>
A small company may centralise its mail in a single mailbox, configure
fetchmail to collect all outgoing mail, send it via a single mailbox 
at their ISP and retrieve all incoming mail from the same mailbox.

<itemize>
<item> <url name="Fetchmail home page" url="http://www.tuxedo.org/~esr/fetchmail/">
</itemize>

<sect1>Web Servers
<p>
Most Linux distributions include <url url="http://www.apache.org"
name="Apache">. Apache is the number one server on the internet according to <htmlurl
url="http://www.netcraft.co.uk/survey/"
name="http://www.netcraft.co.uk/survey/">
. More than a half of all internet sites are running Apache or one of it derivatives. Apache's advantages include its modular design, stability and speed. Given the appropriate hardware and configuration it can support the highest loads: Yahoo, Altavista, GeoCities, and Hotmail are based on customized versions of this server.
<p>
Optional support for SSL (which enables secure transactions) is also available at:
<itemize>
<item><htmlurl url="http://www.apache-ssl.org/" name="http://www.apache-ssl.org/"> 
<item><htmlurl url="http://raven.covalent.net/" name="http://raven.covalent.net/">
<item><htmlurl url="http://www.c2.net/" name="http://www.c2.net/">
</itemize>

Related HOWTOs:
<itemize>
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/WWW-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/WWW-HOWTO.html">
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Virtual-Services-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/Virtual-Services-HOWTO.html">
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Intranet-Server-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/Intranet-Server-HOWTO.html">
<item><url name="Web servers for Linux" url="http://www.linuxlinks.com/Software/Internet/WebServers/">
</itemize>

<sect1>Web Browsers
<p>
A number of web browsers exist for the Linux platform. Netscape Navigator has been one of the choices from the very beginning and the upcoming Mozilla (http://www.mozilla.org) will have a Linux version. Another popular text based web browser is lynx. It is fast and handy when no graphical environment is available.
<p>
<itemize>
<item><url name="Browser software for Linux" url="http://www.linuxlinks.com/Software/Internet/WebBrowsers/">
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/Public-Web-Browser.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/Public-Web-Browser.html">
</itemize>

<sect1>FTP Servers and clients

<p>FTP stands for File Transfer Protocol. An FTP server allows clients to connect to it and retrieve (download) files. Many ftp servers and clients exist for Linux and are included with most distributions. There are text-based clients as well as GUI based ones. FTP related software (servers and clients) for Linux may be found at: <htmlurl url="http://metalab.unc.edu/pub/Linux/system/network/file-transfer/" name="http://metalab.unc.edu/pub/Linux/system/network/file-transfer/">

<sect1>News service
<p>
Usenet (also known as news) is a big bulletin board system that covers all kinds of topics and it is organised hierarchically. A network of computers across the internet (Usenet) exchange articles through the NNTP protocol. Several implementations exist for Linux, either for heavily loaded sites or for small sites receiving only a few newsgroups. 
<itemize>
<item><url name="INN home page" url="http://www.isc.org/">
<item><url name="Linux news related software" url="http://www.linuxlinks.com/Software/Internet/News/">
</itemize>

<sect1>Domain Name System
<p>
A DNS server has the job of translating names (readable by humans) to IP addresses. A DNS server does not know all the IP addresses in the world; rather, it is able to request other servers for the unknown addresses. The DNS server will either return the wanted IP address to the user or report that the name cannot be found in the tables.
<p>
Name serving on Unix (and on the vast majority of the Internet) is done by a program called named.  This is a part of the bind package of The Internet Software Consortium. 
<itemize>
<item> <url name="BIND" url="http://www.isc.org/">
<item><url name="DNS HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/DNS-HOWTO.html">
</itemize>

<sect1>DHCP, bootp
<p>
DHCP and bootp are protocols that allow a client machine to obtain network information (such as their IP number) from a server. Many organisations are starting to use it because it eases network administration, especially in large networks or networks which have lots of mobile users.
<p>
Related documents:
<itemize>
<item><url url="http://metalab.unc.edu/mdw/HOWTO/mini/DHCP/index.html"
name="DHCP mini-HOWTO">
</itemize>

<sect1>NIS 

<p>The Network Information Service (NIS) provides a simple network lookup service consisting of databases and processes. Its purpose is to provide information that has to be known throughout the network to all machines on the network. For example, it enables an administrator to allow users access to any machine in a network running NIS without a password entry existing on each machine; only the main database needs to be maintained.
<p>
Related HOWTO: 
<itemize>
<item><url url="http://metalab.unc.edu/mdw/HOWTO/NIS-HOWTO.html" name="NIS HOWTO">
</itemize>

<sect1>Authentication
<p>
There are also various ways of authenticating users in mixed networks.
<itemize>
<item>For Linux/Windows NT:<htmlurl url="http://www.mindware.com.au/ftp/smb-NT-verify.1.1.tar.gz" name="http://www.mindware.com.au/ftp/smb-NT-verify.1.1.tar.gz">
<item>The PAM (pluggable authentication module) which is a flexible method of Unix authentication:
<url url="http://www.kernel.org/pub/linux/libs/pam/index.html" name="PAM library">. 
<item>Finally, <url url="http://www.umich.edu/~dirsvcs/ldap/index.html" name="LDAP in Linux">
</itemize>
<sect>Remote execution of applications
<p>
One of the most amazing features of Unix (yet one of the most unknown to new users) is its great support for remote and distributed execution of applications.

<sect1>Telnet 
<p>
Telnet is a program that allows a person to use a remote computer as if that person were actually at the remote site. Telnet is one of the most powerful tools for Unix, allowing for true remote administration. It is also an interesting program from the point of view of users, because it allows remote access to all their files and programs from anywhere in the Internet. Combined with an X server, there is no difference (apart from the delay) between being at the console or on the other side of the planet. Telnet daemons and clients are available with most Linux distributions.
<p>Encrypted remote shell sessions are available through SSH (<url name="http://www.ssh.fi/sshprotocols2/index.html" url="http://www.ssh.fi/sshprotocols2/index.html">) thus effectively allowing secure remote administration.
<p>
<itemize>
<item><url name="Telnet related software" url="http://metalab.unc.edu/pub/Linux/system/network/telnet/">
</itemize>

<sect1>Remote commands 
<p>
In Unix, and in particular in Linux, remote commands exist that allow for interaction with other computers from the shell prompt. Examples are: rlogin, which allows for login in a remote machine in a similar way to telnet, rcp, which allows for the remote transfer of files among machines, etc. Finally, the remote shell command rsh allows the execution of a command on a remote machine without actually logging onto that machine.

<sect1>The X Window System
<p>
The X Window System was developed at MIT in the late 1980s, rapidly becoming the industry standard windowing system for Unix graphics workstations. The software is freely available, very versatile, and is suitable for a wide range of hardware platforms. Any X environment consists of two distinct parts, the X server and one or more X clients. It is important to realise the distinction between the server and the client. The server controls the display directly and is responsible for all input/output via the keyboard, mouse or display. The clients, on the other hand, do not access the screen directly - they communicate with the server, which handles all input and output. It is the clients which do the "real" computing work - running applications or whatever. The clients communicate with the server, causing the server to open one or more windows to handle input and output for that client.
<p>
In short, the X Window System allows a user to log in into a remote machine, execute a process (for example, open a web browser) and have the output displayed on his own machine. Because the process is actually being executed on the remote system, very little CPU power is needed in the local one. Indeed, computers exist whose primary purpose is to act as pure X servers.  Such systems are called X terminals.

A free port of the X Window System exists for Linux and can be found at:
<url name="Xfree" url="http://www.xfree86.org/">. It is included in most Linux distributions.
<p>
Related HOWTO: 
<itemize>
<item><url url="http://metalab.unc.edu/mdw/HOWTO/mini/Remote-X-Apps.html" name="Remote X Apps HOWTO">
</itemize>


<sect1>VNC
<p>
VNC stands for Virtual Network Computing. It is, in essence, a remote display system which allows one to view a computing 'desktop' environment not only on the machine where it is running, but from anywhere on the Internet and from a wide variety of machine architectures. Both clients and servers exist for Linux as well as for many other platforms. It is possible to execute MS-Word in a Windows NT or 95 machine and have the output displayed in a Linux machine. The opposite is also true; it is possible to execute an application in a Linux machine and have the output displayed in any other Linux or Windows machine. One of the available clients is a Java applet, allowing the remote display to be run inside a web browser. Another client is a port for Linux using the SVGAlib graphics library, allowing 386s with as little as 4 MB of RAM to become fully functional X-Terminals.
<p>

<itemize>
<item><url name="VNC web site" url="http://www.realvnc.com/">
</itemize>

<sect> Network Interconnection

<p>
Linux networking is rich in features. A Linux box can be configured so it can act as a router, bridge, etc... Some of the available options are described below.

<sect1>Router

<p>The Linux kernel has built-in support for routing functions. A Linux box can act either as an IP or IPX router for a fraction of the cost of a commercial router. Recent kernels include special options for machines acting primarily as routers:
<itemize>
<item> Multicasting:  Allows the Linux machine to act as a router for IP packets that have several destination addresses. It is needed on the MBONE, a high bandwidth network on top of the Internet which carries audio and video broadcasts.
<item>IP policy routing:  Normally a router decides what to do with a received packet based solely on the packet's final destination address, but routing can also take into account the originating address and the network device from which the packet reached it.
</itemize>

There are some related projects which include one aiming at building a
complete, running Linux router on a floppy disk: <url name="Linux router
project" url="http://www.linuxrouter.org">

<sect1>Bridge
<p>
The Linux kernel has built-in support for acting as an Ethernet bridge, which means that the different Ethernet segments it is connected to will appear as one Ethernet to the participants. Several bridges can work together to create even larger networks of Ethernets using the IEEE802.1 spanning tree algorithm. As this is a standard, Linux bridges will interoperate properly with other third party bridge products. Additional packages allow filtering based on IP, IPX or MAC addresses.
<p>
Related HOWTOs:
<itemize>
<item><url url="http://metalab.unc.edu/mdw/HOWTO/mini/Bridge+Firewall.html" name="Bridge+Firewall">
<item><url url="http://metalab.unc.edu/mdw/HOWTO/mini/Bridge.html" name="Bridge">
</itemize>

<sect1>IP Masquerade
<p>
IP Masquerade is a developing networking function in Linux. If a Linux host is connected to the Internet with IP Masquerade enabled, then computers connecting to it (either on the same LAN or connected with modems) can reach the Internet as well, even though they have no officially assigned IP addresses. This allows for reduction of costs, since many people may be able to access the Internet using a single modem connection as well as contributes to increased security (in some way the machine is acting as a firewall, since unofficially assigned addresses cannot be accessed outside of that network).

IP masquerade related pages and documents:
<itemize>
<item><htmlurl url="http://ipmasq.home.ml.org/" name="http://ipmasq.home.ml.org/">
<item><htmlurl url="http://www.indyramp.com/masq/links.pfhtml" name="http://www.indyramp.com/masq/links.pfhtml">
<item><htmlurl
url="http://metalab.unc.edu/mdw/HOWTO/IP-Masquerade-HOWTO.html"
name="http://metalab.unc.edu/mdw/HOWTO/IP-Masquerade-HOWTO.html">
</itemize>

<sect1>IP Accounting
<p>
This option of the Linux kernel keeps track of IP network traffic, performs packet logging and produces some statistics. A series of rules may be defined so when a packet matches a given pattern, some action is performed: a counter is increased, it is accepted/rejected, etc.

<sect1>IP aliasing
<p>
This feature of the Linux kernel provides the possibility of setting multiple network addresses on the same low-level network device driver (e.g two IP addresses in one Ethernet card). It is typically used for services that act differently based on the address they
listen on (e.g. "multihosting" or "virtual domains" or "virtual hosting services".
<p>
Related HOWTO:
<itemize>
<item><url url="http://metalab.unc.edu/mdw/HOWTO/mini/IP-Alias.html" name="IP Aliasing HOWTO">
</itemize>

<sect1>Traffic Shaping
<p>
The traffic shaper is a virtual network device that makes it possible to limit the rate of outgoing data flow over another network device. This is especially useful in scenarios such as ISPs, where it is desirable to control and enforce policies regarding how much bandwidth is used by each client. Another alternative (for web services only) may be certain Apache modules which restrict the number of IP connections by client or the bandwidth used.
<itemize>
<item><htmlurl
url="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.15"
name="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.15">
</itemize>
<sect1>Firewall
<p>
A firewall is a device that protects a private network from the public part (the internet as a whole). It is designed to control the flow of packets based on the source, destination, port and packet type information contained in each packet.
<p>
Different firewall toolkits exist for Linux as well as built-in support in the kernel. Other firewalls are TIS and SOCKS. These firewall toolkits are very complete and combined with other tools allow blocking/redirection of all kinds of traffic and protocols. Different policies can be implemented via configuration files or GUI programs.

<itemize>
<item><url name="TIS home page" url="http://www.tis.com" >
<item><url name="SOCKS" url="http://www.socks.nec.com/socksfaq.html">
<item><url name="Firewall HOWTO" url="http://metalab.unc.edu/mdw/HOWTO/Firewall-HOWTO.html">
</itemize>

<sect1>Port forwarding
<p>
An increasing number of web sites are becoming interactive by having cgi-bins or Java applets that access some database or other service. Since this access may pose a security problem, the machine containing the database should not be directly connected to the Internet.
<p>
Port Forwarding can provide an almost ideal solution to this access problem. On the firewall, IP packets that come in to a specific port number can be re-written and forwarded to the internal server providing the actual service. The reply packets from the internal server are re-written to make it appear that they came from the firewall. 
<p>
Port forwarding information may be found <url url="http://www.ox.compsoc.net/~steve/portforwarding.html" name="here">

<sect1>Load Balancing
<p>
Demand for load balancing usually arises in database/web access when many clients make simultaneous requests to a server. It would be desirable to have multiple identical servers and redirect requests to the less loaded server. This can be achieved through Network Address Translation techniques (NAT) of which IP masquerading is a subset. Network administrators can replace a single server providing Web services - or any other application - with a logical pool of servers sharing a common IP address. Incoming connections are directed to a particular server using one load-balancing algorithm. The virtual server rewrites incoming and outgoing packets to give clients the appearance that only one server exists.
<p>
Linux IP-NAT information may be found  <url url="http://www.csn.tu-chemnitz.de/HyperNews/get/linux-ip-nat.html" name="here">

<sect1>EQL
<p>
EQL is integrated into the Linux kernel. If two serial connections exist to some other computer (this usually requires two modems and two telephone lines) and  SLIP or PPP (protocols for sending Internet traffic over telephone lines) are used on them, it is possible to make them behave like one double speed connection using this driver. Naturally, this has to be supported at the other end as well.
<p>
<itemize>
<item><htmlurl
url="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.2"
name="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.2">   
</itemize>

<sect1>Proxy Server
<p>
The term proxy means "to do something on behalf of someone else." In networking terms, a proxy server computer can act on the behalf of several clients. An HTTP proxy is a machine that receives requests for web pages from another machine (Machine A). The proxy gets the page requested and returns the result to Machine A. The proxy may have a cache with the requested pages, so if another machine asks for the same page the copy in the cache will be returned instead. This allows efficient use of bandwidth resources and less response time. As a side effect, as client machines are not directly connected to the outside world this is a way of securing the internal network. A well-configured proxy can be as effective as a good firewall.
<p>
Several proxy servers exist for Linux. One popular solution is the Apache proxy module. A more complete and robust implementation of an HTTP proxy is SQUID.
<p>
<itemize>
<item><url name="Apache" url="http://www.apache.org">
<item><url name="Squid" url="http://squid.nlanr.net/">
</itemize>


<sect1>Diald on demand
<p>
The purpose of dial on demand is to make it transparently appear that the users have a permanent connection to a remote site.  Usually, there is a daemon who monitors the traffic of packets and where an interesting packet (interesting is defined usually by a set of rules/priorities/permissions) arrives it establishes a connection with the remote end. When the channel is idle for a certain period of time, it drops the connection.
<p>
<itemize>
<item><url url="http://metalab.unc.edu/mdw/HOWTO/Diald-HOWTO.html" name="Diald HOWTO">
</itemize>

<sect1>Tunnelling, mobile IP and virtual private networks 
<p>
The Linux kernel allows the tunnelling (encapsulation) of protocols. It can do IPX tunnelling through IP, allowing the connection of two IPX networks through an IP only link. It can also do IP-IP tunnelling, which it is essential for mobile IP support, multicast support and amateur radio. (see <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.8" name="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.8">)
<p>
Mobile IP specifies enhancements that allow transparent routing of IP datagrams to mobile nodes in the Internet.  Each mobile node is always identified by its home address, regardless of its current point of attachment to the Internet.  While situated away from its home, a mobile node is also associated with a care-of address, which provides information about its current point of attachment to the Internet.  The protocol provides for registering the care-of address with a home agent.  The home agent sends datagrams destined for the mobile node through a tunnel to the care-of address.  After arriving at the end of the tunnel, each datagram is then delivered to the mobile node. 
<p>
Point-to-Point Tunneling Protocol (PPTP) is a networking technology that allows the use of the Internet as a secure virtual private network (VPN). PPTP is integrated with the Remote Access Services (RAS) server which is built into Windows NT Server. With PPTP, users can dial into a local ISP, or connect directly to the Internet, and access their network as if they were at their desks. PPTP is a closed protocol and its security has recently being compromised. It is highly recomendable to use other Linux based alternatives, since they rely on open standards which have been carefully examined and tested.
<p>
<itemize>
<item>A client implementation of the PPTP for Linux is available  <url url="http://www.pdos.lcs.mit.edu/~cananian/Projects/PPTP/" name="here">
<item>More on Linux PPTP can be found <url url="http://bmrc.berkeley.edu/people/chaffee/linux_pptp.html" name="here">
</itemize>
Mobile IP: 
<itemize>
<item> <htmlurl
url="http://www.hpl.hp.com/personal/Jean_Tourrilhes/MobileIP/mip.html"
name="http://www.hpl.hp.com/personal/Jean_Tourrilhes/MobileIP/mip.html">
<item> <htmlurl
url="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.12"
name="http://metalab.unc.edu/mdw/HOWTO/NET3-4-HOWTO-6.html#ss6.12">
</itemize>
Virtual Private Networks related documents:
<itemize>
<item> <htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/VPN.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/VPN.html">
<item> <htmlurl url="http://sites.inka.de/sites/bigred/devel/cipe.html" name="http://sites.inka.de/sites/bigred/devel/cipe.html">
</itemize>


<sect> Network Management
<p>
<sect1> Network management applications
<p>
There is an impressive number of tools focused on network management and remote administration. 
Some interesting remote administration projects are linuxconf and webmin:
<itemize>
<item> <url name="Webmin" url="http://www.webmin.com/webmin/">
<item> <url name="Linuxconf" url="http://www.solucorp.qc.ca/linuxconf/">
</itemize>
<p>
Other tools include network traffic analysis tools, network security tools, monitoring 
tools, configuration tools, etc. An archive of many of these tools may be found at <url url="http://www.metalab.unc.edu/pub/Linux/system/network/" name="Metalab">

<sect1>SNMP
<p>
The Simple Network Management Protocol is a protocol for Internet network management services. It allows for remote monitoring and configuration of routers, bridges, network cards, switches, etc... There is a large amount of libraries, clients, daemons and SNMP based monitoring programs available for Linux. A good page dealing with SNMP and Linux software may be found at : 
<htmlurl url="http://linas.org/linux/NMS.html" name="http://linas.org/linux/NMS.html">

<sect>Enterprise Linux Networking
<p>
In certain situations it is necessary for the networking infrastructure to have proper mechanisms to guarantee network availability nearly 100% of the time. Some related techniques are described in the following sections. Most of the following material can be found at the excellent Linas website: <htmlurl url="http://linas.org/linux/index.html" name="http://linas.org/linux/index.html"> and in the <url url="http://metalab.unc.edu/pub/Linux/ALPHA/linux-ha/High-Availability-HOWTO.html" name="Linux High-Availability HOWTO">

<sect1>High Availability 
<p>
Redundancy is used to prevent the overall IT system from having single points of failure. A server with only one network card or a single SCSI disk has two single points of failure. The objective is to mask unplanned outages from users in a manner that lets users continue to work quickly. High availability software is a set of scripts and tools that automatically monitor and detect failures, taking the appropriate steps to restore normal operation and to notifying system administrators.

<sect1>RAID
<p>
RAID, short for Redundant Array of Inexpensive Disks, is a method whereby information is spread across several disks, using techniques such as disk striping (RAID Level 0) and disk mirroring (RAID level 1) to achieve redundancy, lower latency and/or higher bandwidth for reading and/or writing, and recoverability from hard-disk crashes. Over six different types of RAID configurations have been defined. There are three types of RAID solution options available to Linux users: software RAID, outboard DASD boxes, and RAID disk controllers.
<p>
<itemize>
<item>Software RAID: Pure software RAID implements the various RAID levels in the kernel disk (block device) code. 
<item>Outboard DASD Solutions: DASD (Direct Access Storage Device) are separate boxes that come with their own power supply, provide a cabinet/chassis for holding the hard drives, and appear to Linux as just another SCSI device. In many ways, these offer the most robust RAID solution.
<item>RAID Disk Controllers: Disk Controllers are adapter cards that plug into the ISA/EISA/PCI bus. Just like regular disk controller cards, a cable attaches them to the disk drives. Unlike regular disk controllers, the RAID controllers will implement RAID on the card itself, performing all necessary operations to provide various RAID levels.
</itemize>

Related HOWTOs:
<itemize>
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/mini/DPT-Hardware-RAID.html" name="http://metalab.unc.edu/mdw/HOWTO/mini/DPT-Hardware-RAID.html">
<item><htmlurl url="http://metalab.unc.edu/mdw/HOWTO/Root-RAID-HOWTO.html" name="http://metalab.unc.edu/mdw/HOWTO/Root-RAID-HOWTO.html">
<item><htmlurl
url="http://metalab.unc.edu/mdw/HOWTO/Software-RAID-HOWTO.html"
name="http://metalab.unc.edu/mdw/HOWTO/Software-RAID-HOWTO.html">
</itemize>

RAID at linas.org:
<itemize>
<item><htmlurl url="http://linas.org/linux/raid.html" name="http://linas.org/linux/raid.html">
</itemize>

<sect1>Redundant networking
<p>
IP Address Takeover (IPAT). When a network adapter card fails, its IP address should be taken by a working network card in the same node or in another node. MAC Address Takeover: when an IP takeover occurs, it should be made sure that all the nodes in the network update their ARP caches (the mapping between IP and MAC addresses). 
<p>
See the High-Availability HOWTO for more details: <htmlurl url="http://metalab.unc.edu/pub/Linux/ALPHA/linux-ha/High-Availability-HOWTO.html" name="http://metalab.unc.edu/pub/Linux/ALPHA/linux-ha/High-Availability-HOWTO.html">

<sect>Sources of Information
<p>
If you have networking problems with Linux, please do not e-mail the questions
to me. I just simply do not have the time to answer them. You have better
chances to obtain help if you post a question in the
comp.os.linux.networking newsgroup (which you can access through <htmlurl
url="http://www.dejanews.com" name="http://www.dejanews.com">). Before
posting there, make sure that you have read the relevant documentation.
Then search the news archive, because chances are that somebody, sometime
made the same question (and somebody answered).
When posting, remember to explain all the steps you have followed and the
error messages you got.
Where to get further information:
<itemize>
<item> Linux: <htmlurl url="http://www.linux.org" name="http://www.linux.org">
<item> Linux Documentation Project: <htmlurl url="http://metalab.unc.edu/mdw/linux.html" name="http://metalab.unc.edu/mdw/linux.html">
(check out the Linux Network Administrator Guide)
<item> Freshmeat: The latest releases of Linux Software. <htmlurl url="http://www.freshmeat.net" name="http://www.freshmeat.net">
<item> Linux links: <htmlurl url="http://www.linuxlinks.com/Networking/" name="http://www.linuxlinks.com/Networking/">
</itemize>

<sect>Document history
<p>
<itemize>
<item> 0.32 Updated many links that have changed. Special thanks go here to
<url name="Kontiki" url="mailto:kontiki@lares.dtui.ne.jp"> for his careful
review and detailed description of what needed to change. Many thanks also to
<url name="Anne" url="mailto:annabell@ixos.de"> and <url name="Mathias"
url="hessler@isdn4linux.de"> who pointed out other links that were no longer
valid.
<item> 0.31 (17 Sept 1999) Changed address for linux router project (thanks to John
Ellis) and added another PPTP link (thanks to Benjamin Smith)
<item>  0.30 (6 April 1999)  Included section on CODA (thanks to  <url name="Brian
Ristuccia" url="mailto:brianr@osiris.978.org">
<item> 0.2-0.29 Bugfixes  :-)  (see acknowledgements, at the end of this
document)
<item> 0.1 (5 june 1998)
</itemize>

<sect>Acknowledgements and disclaimer
<p>
This document is based on the work of many other people who have made it
possible for Linux to be what it is now: one of the best network operating
systems. All credit is theirs. A lot of effort has been put into this
document to make it simple but accurate and complete but not excessively
long. Nevertheless, no liability will be assumed by the author under any
circumstance. Use the information contained here at your own risk. Please
feel free to e-mail me suggestions, corrections or general comments about
the document so I can improve it. Other topics that will probably be
included in futures revisions of this document may include radius, web/ftp
mirroring tools such as wget, traffic analyzers, CORBA... and many others
that may be suggested and suitable. You can reach me at <htmlurl
url="mailto:daniel@rawbyte.com" name="daniel@rawbyte.com">.
<p>
Finally I would like to thank  <htmlurl url="mailto:efat@kampsax.dtu.dk" name="Finnbjorn av Teigum">,  
<htmlurl url="mailto:ckant@fazenda.gov.br" name="Cesar Kant">, <htmlurl
url="mailto:arn@mygale.org" name="Mathieu Arnold"> and specially
<htmlurl url="mailto:hisakuni@interlink.or.jp" name="Hisakuni Nogami"> and
<htmlurl url="mailto:pgarcia@mail.execpc.com" name="Phil Garcia">
for their careful reviews and comments on this HOWTO. Their help is
greatly appreciated.
<p> You can find a version of this document at <url
name="http://www.rawbyte.com/lno/" url="http://www.rawbyte.com/lno">.
<p>
Daniel Lopez Ridruejo  8 July 2000
</article>


